<!-- Product Grid -->
<div class="grid-container">
  {% for product in collections.all.products limit:6 %}
    <div class="grid-item">
      <img src="{{ product.featured_image | img_url: 'large' }}" alt="{{ product.title }}">
      <button class="grid-popup-btn" data-product-id="{{ product.id }}">+</button>
    </div>
  {% endfor %}
</div>

<!-- Popup -->
<div class="grid-popup-overlay">
  <div class="grid-popup">
    <span class="grid-close-popup">&times;</span>
    <div class="grid-popup-content">
      <img id="popup-image" src="" alt="">
      <h2 id="popup-title"></h2>
      <p id="popup-price"></p>
      <p id="popup-description"></p>
      
      <!-- Color Options -->
      <div class="color-options" id="popup-color"></div>
      
      <!-- Size Dropdown -->
      <select id="popup-size" class="size-dropdown">
        <option value="">Choose your size</option>
        <option value="XS">XS</option>
        <option value="S">S</option>
        <option value="M">M</option>
        <option value="L">L</option>
      </select>
      
      <button class="grid-add-to-cart">ADD TO CART →</button>
    </div>
  </div>
</div>

<!-- CSS Styles -->
<style>
  .grid-container {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 15px;
    padding: 20px;
  }
  
  .grid-item {
    position: relative;
  }

  .grid-popup-btn {
    position: absolute;
    top: 10px;
    right: 10px;
    background: black;
    color: white;
    border: none;
    border-radius: 50%;
    width: 35px;
    height: 35px;
    font-size: 20px;
    cursor: pointer;
  }

  .grid-popup-overlay {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.6);
    justify-content: center;
    align-items: center;
  }

  .grid-popup {
    background: white;
    padding: 20px;
    border-radius: 8px;
    width: 375px;
    text-align: center;
  }

  .grid-close-popup {
    position: absolute;
    top: 10px;
    right: 15px;
    font-size: 24px;
    cursor: pointer;
  }

  /* Color Buttons */
  .color-options {
    display: flex;
    gap: 10px;
    justify-content: center;
    margin-top: 10px;
  }

  .color-option {
    padding: 5px 20px;
    border: 2px solid black;
    background-color: white;
    cursor: pointer;
    font-weight: bold;
    text-transform: uppercase;
    transition: all 0.3s;
  }

  .color-option.selected {
    background-color: black;
    color: white;
  }

  /* Size Dropdown */
  .size-dropdown {
    width: 100%;
    padding: 8px;
    border: 1px solid #ccc;
    margin-top: 10px;
  }
</style>

<!-- JavaScript -->
<script>
  document.addEventListener("DOMContentLoaded", function () {
    const popupOverlay = document.querySelector(".grid-popup-overlay");
    const closePopup = document.querySelector(".grid-close-popup");
    const productsData = {{ collections.all.products | json }};

    document.querySelectorAll(".grid-popup-btn").forEach(button => {
      button.addEventListener("click", function () {
        const productId = this.dataset.productId;
        const product = productsData.find(p => p.id == productId);

        if (product) {
          document.getElementById("popup-image").src = product.featured_image;
          document.getElementById("popup-title").innerText = product.title;
          document.getElementById("popup-price").innerText = product.price + " €";
          document.getElementById("popup-description").innerHTML = product.description.replace(/</?p>/g, "");

          // Colors
          const colorContainer = document.getElementById("popup-color");
          colorContainer.innerHTML = "";
          const uniqueColors = new Set();

          product.variants.forEach(variant => {
            if (variant.option1 && !uniqueColors.has(variant.option1)) {
              uniqueColors.add(variant.option1);
              const button = document.createElement("button");
              button.classList.add("color-option");
              button.innerText = variant.option1;
              button.setAttribute("data-color", variant.option1);

              button.addEventListener("click", function () {
                document.querySelectorAll(".color-option").forEach(btn => btn.classList.remove("selected"));
                this.classList.add("selected");
              });

              colorContainer.appendChild(button);
            }
          });

          popupOverlay.style.display = "flex";
        }
      });
    });

    closePopup.addEventListener("click", function () {
      popupOverlay.style.display = "none";
    });

    popupOverlay.addEventListener("click", function (e) {
      if (e.target === popupOverlay) popupOverlay.style.display = "none";
    });
  });
</script>