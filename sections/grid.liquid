<!-- Product Grid -->
<div class="grid-container">
  {% for product in collections.all.products limit:6 %}
    <div class="grid-item">
      <img src="{{ product.featured_image | img_url: 'large' }}" alt="{{ product.title }}">
      <button class="grid-popup-btn" data-product-id="{{ product.id }}">+</button>
    </div>
  {% endfor %}
</div>

<!-- Popup -->
<div class="grid-popup-overlay">
  <div class="grid-popup">
    <span class="grid-close-popup">&times;</span>
    <div class="grid-popup-content">
      <img id="popup-image" src="" alt="">
      <h2 id="popup-title"></h2>
      <p id="popup-price"></p>
      <p id="popup-description"></p>
      <div class="grid-popup-actions">
        <div id="popup-color" class="color-options"></div>
        <select id="popup-size">
          <option value="">Choose your size</option>
          <option value="XS">XS</option>
          <option value="S">S</option>
          <option value="M">M</option>
          <option value="L">L</option>
        </select>
        <button class="grid-add-to-cart">ADD TO CART →</button>
      </div>
    </div>
  </div>
</div>

<!-- CSS Styles -->
<style>
  .grid-container {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 15px;
    padding: 20px;
  }

  .grid-item {
    position: relative;
    overflow: hidden;
    border-radius: 10px;
  }

  .grid-item img {
    width: 100%;
    height: auto;
    display: block;
    border-radius: 10px;
    transition: transform 0.3s ease-in-out;
  }

  .grid-item:hover img {
    transform: scale(1.05);
  }

  /* + Button */
  .grid-popup-btn {
    position: absolute;
    top: 10px;
    right: 10px;
    background: black;
    color: white;
    border: none;
    border-radius: 50%;
    width: 35px;
    height: 35px;
    font-size: 20px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background 0.3s;
  }

  .grid-popup-btn:hover {
    background: #444;
  }

  /* Popup */
  .grid-popup-overlay {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.6);
    justify-content: center;
    align-items: center;
    z-index: 1000;
  }

  .grid-popup {
    background: white;
    padding: 25px;
    border-radius: 10px;
    width: 400px;
    position: relative;
    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.3);
    text-align: center;
    animation: fadeIn 0.3s ease-in-out;
  }

  @keyframes fadeIn {
    from { opacity: 0; transform: scale(0.9); }
    to { opacity: 1; transform: scale(1); }
  }

  .grid-close-popup {
    position: absolute;
    top: 10px;
    right: 15px;
    font-size: 24px;
    cursor: pointer;
  }

  .grid-popup-content img {
    width: 100%;
    border-radius: 8px;
    margin-bottom: 10px;
  }

  /* Color Buttons */
  .color-options {
    display: flex;
    gap: 10px;
    justify-content: center;
    margin-top: 10px;
  }

  .color-option {
    padding: 5px 15px;
    border-radius: 5px;
    border: 2px solid black;
    cursor: pointer;
    font-size: 14px;
    text-align: center;
    background-color: white;
    font-weight: bold;
    min-width: 60px;
    transition: all 0.3s ease;
  }

  .color-option.selected {
    background-color: black;
    color: white;
  }

  select {
    width: 100%;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    font-size: 16px;
  }

  .grid-add-to-cart {
    background: black;
    color: white;
    border: none;
    padding: 12px;
    width: 100%;
    cursor: pointer;
    border-radius: 5px;
    transition: background 0.3s;
    font-size: 16px;
  }

  .grid-add-to-cart:hover {
    background: #444;
  }
</style>

<!-- JavaScript -->
<script>
document.addEventListener("DOMContentLoaded", function () {
  const popupOverlay = document.querySelector(".grid-popup-overlay");
  const closePopup = document.querySelector(".grid-close-popup");
  const productsData = {{ collections.all.products | json }};

  document.querySelectorAll(".grid-popup-btn").forEach(button => {
    button.addEventListener("click", function () {
      const productId = this.dataset.productId;
      const product = productsData.find(p => p.id == productId);
      
      if (product) {
        document.getElementById("popup-image").src = product.featured_image;
        document.getElementById("popup-title").innerText = product.title;
        document.getElementById("popup-price").innerText = product.price + " €";
        document.getElementById("popup-description").innerText = product.description;

        const colorContainer = document.getElementById("popup-color");
        colorContainer.innerHTML = "";

        const uniqueColors = [...new Set(product.variants.map(variant => variant.option1))];
        uniqueColors.forEach(color => {
          const button = document.createElement("button");
          button.classList.add("color-option");
          button.innerText = color;
          button.addEventListener("click", () => {
            document.querySelectorAll(".color-option").forEach(btn => btn.classList.remove("selected"));
            button.classList.add("selected");
          });
          colorContainer.appendChild(button);
        });

        popupOverlay.style.display = "flex";
      }
    });
  });
  closePopup.addEventListener("click", () => popupOverlay.style.display = "none");
});
</script>